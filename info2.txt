package com.example.databasevalidation.service;

import com.example.databasevalidation.dto.ConnectionResponse;
import com.utilidades.configuracion.OracleConfiguration;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import javax.sql.DataSource;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.Arrays;

@Service
public class DatabaseValidationService {

    @Value("${spring.datasource.url}")
    private String dbUrl;

    private final OracleConfiguration oracleConfiguration;
    private final List<String> users;
    private final List<String> nicknames;

    public DatabaseValidationService(OracleConfiguration oracleConfiguration) {
        this.oracleConfiguration = oracleConfiguration;
        this.users = Arrays.asList(System.getenv("USERS").split(","));
        this.nicknames = Arrays.asList(System.getenv("NICKNAMES").split(","));
    }

    public ConnectionResponse validateConnection(int option) {
        if (option < 1 || option > users.size() || option > nicknames.size()) {
            return new ConnectionResponse("error", "Invalid option");
        }

        String username = users.get(option - 1);
        String nickname = nicknames.get(option - 1);

        try {
            DataSource dataSource = oracleConfiguration.dataSource(username, nickname);
            try (Connection connection = dataSource.getConnection()) {
                if (connection.isValid(2)) {
                    return new ConnectionResponse("success", "Connection successful");
                } else {
                    return new ConnectionResponse("error", "Connection not successful");
                }
            }
        } catch (SQLException e) {
            return new ConnectionResponse("error", "Connection failed: " + e.getMessage());
        }
    }
}
