package com.utilidades.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import com.utilidades.servicio.ConsultasService;

@RestController
@RequestMapping("/api")
public class ApiConsultas {

    @Autowired
    private ConsultasService consultasService;

    @PostMapping("/ejecutar")
    public ResponseEntity<?> ejecutarOperacion(@RequestParam String valorParametro) {
        Object resultado = consultasService.validarExistencia(valorParametro);
        return ResponseEntity.ok().body(resultado);
    }
}






package com.utilidades.servicio;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.Map;

@Service
public class ConsultasService {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    public ResponseEntity<?> validarExistencia(String valorParametro) {
        // Definir la consulta SQL con un placeholder
        String consultaSql = "SELECT COUNT(*) FROM mitabla WHERE columna = ?";
        
        try {
            int count = jdbcTemplate.queryForObject(consultaSql, new Object[]{valorParametro}, Integer.class);
            Map<String, Integer> response = new HashMap<>();
            response.put("resultado", count > 0 ? 1 : 0);
            return ResponseEntity.ok().body(response);
        } catch (Exception e) {
            e.printStackTrace();
            Map<String, String> errorResponse = new HashMap<>();
            errorResponse.put("mensaje", "Error al ejecutar consulta: " + e.getMessage());
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(errorResponse);
        }
    }
}




        try {
            int count = jdbcTemplate.queryForObject(consultaSql, new Object[]{valorParametro}, Integer.class);
            return count > 0 ? 1 : 0;
        } catch (Exception e) {
            e.printStackTrace();
            return 0; // En caso de error, devolvemos 0 (o puedes manejarlo de otra forma seg√∫n tus necesidades)
        }






            public ResponseEntity<?> ejecutarOperacion(@RequestParam String valorParametro) {
        int resultado = consultasService.validarExistencia(valorParametro);
        return ResponseEntity.ok().body(resultado);